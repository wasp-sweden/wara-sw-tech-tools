#!/usr/bin/env bash

set -e
set -o pipefail

output="default"
optstring="s" 

while getopts ${optstring} flag; do
	case ${flag} in
		s) 
			output=simple
			shift
			;;
		?)
			echo "invalid option: ${OPTARG}"
			;;
	esac
done

if [ $# -ne 1 ]; then
	echo "error: which project? choose one of:"
	printf "%s\n" $OVE_PROJECT_LIST
	exit 1
elif ! dir=$(ove-proj2path $1); then
	echo "error: can not get path for '$1'"
	exit 1
fi

if [ ! -d ${OVE_BASE_DIR}/depclean ]; then
	if ! ove fetch depclean; then
		echo "error: 'ove fetch depclean' failed"
		exit 1
	fi
fi

depclean_version=$(git -C ${OVE_BASE_DIR}/depclean describe --tags)
if [ -s ${OVE_BASE_DIR}/depclean/depclean-core/target/depclean-core-${depclean_version}.jar ] && \
	[ -s ${OVE_BASE_DIR}/depclean/depclean-maven-plugin/target/depclean-maven-plugin-${depclean_version}.jar ]; then
	echo "info: depclean is already built"
else
	ove buildme-parallel depclean
fi

cd ${dir}

function resultInSimple {
	if ! mvn -e -q se.kth.castor:depclean-maven-plugin:${depclean_version}:depclean | tee /dev/stderr | $OVE_PROJECT_DIR/parsers/depclean/parse.py | ove mkresult depclean $1 simple; then
		echo "error: depclean failed"
		exit 1
	fi
}

function resultInJSON {
	mvn -e -q se.kth.castor:depclean-maven-plugin:${depclean_version}:depclean -DcreateResultJson=true
	ove mkresult depclean $1 < examples-jmh/depclean-results.json
}

case ${output} in
	simple) 
		resultInSimple $1
		;;
	default)
		resultInJSON $1
		;;
	*)
		echo "invalid option: ${output}"
		;;
esac

